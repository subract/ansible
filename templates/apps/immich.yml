version: "3.8"

networks:
  immich:
  web:

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    command: ["start-server.sh"]
    volumes:
      - ${IMMICH_DATA_LOCATION}:/usr/src/app/upload
      - ${IMMICH_AVEN_UPLOAD_LOCATION}:/usr/src/app/upload/library/aven
      - ${IMMICH_IMPORT_LOCATION}:/mnt/aven:ro
    env_file:
      - .env
    depends_on:
      - redis
      - database
      - typesense
    networks:
      immich:
    restart: unless-stopped


  immich-microservices:
    container_name: immich_microservices
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    command: ["start-microservices.sh"]
    volumes:
      - ${IMMICH_DATA_LOCATION}:/usr/src/app/upload
      - ${IMMICH_AVEN_UPLOAD_LOCATION}:/usr/src/app/upload/library/aven
      - ${IMMICH_IMPORT_LOCATION}:/mnt/aven:ro
    env_file:
      - .env
    depends_on:
      - redis
      - database
      - typesense
    networks:
      immich:
    restart: unless-stopped


  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    volumes:
      - ${IMMICH_DATA_LOCATION}:/usr/src/app/upload
      - ${IMMICH_AVEN_UPLOAD_LOCATION}:/usr/src/app/upload/library/aven
      - ${IMMICH_IMPORT_LOCATION}:/mnt/aven:ro
      - /ssd/app/immich/ml_cache:/cache
    env_file:
      - .env
    networks:
      immich:
    restart: unless-stopped


  immich-web:
    container_name: immich_web
    image: ghcr.io/immich-app/immich-web:${IMMICH_VERSION:-release}
    env_file:
      - .env
    networks:
      immich:
    restart: unless-stopped


  typesense:
    container_name: immich_typesense
    image: typesense/typesense:0.24.0
    environment:
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
      - TYPESENSE_DATA_DIR=/data
    logging:
      driver: none
    networks:
      immich:
    volumes:
      - /ssd/app/immich/typesense:/data
    restart: unless-stopped


  redis:
    container_name: immich_redis
    image: redis:6.2
    restart: unless-stopped
    networks:
      immich:


  database:
    container_name: immich_postgres
    image: postgres:14
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      PG_DATA: /var/lib/postgresql/data
    networks:
      immich:
    volumes:
      - /ssd/app/immich/postgres:/var/lib/postgresql/data
    restart: unless-stopped


  immich-proxy:
    container_name: immich_proxy
    image: ghcr.io/immich-app/immich-proxy:${IMMICH_VERSION:-release}
    environment:
      # Make sure these values get passed through from the env file
      - IMMICH_SERVER_URL
      - IMMICH_WEB_URL
    depends_on:
      - immich-server
    restart: unless-stopped

    # ports:
    #   - 2283:8080

    networks:
      immich:
      web:

    labels:
      - traefik.enable=true
      - traefik.http.routers.im.rule=Host(`im.{{ primary_domain }}`)
      - traefik.http.routers.im.entrypoints=https
      - traefik.http.routers.im.tls.certresolver=default
      - traefik.http.services.im.loadbalancer.server.port=8080

