version: "3.7"

networks:
  web:
  drone:

services:
  gitea:
    container_name: gitea
    image: gitea/gitea:latest
    restart: unless-stopped

    environment:
      - USER_UID=1000
      - USER_GID=1000
      - GITEA__SERVICE__DISABLE_REGISTRATION=true
      - GITEA__MIGRATIONS__ALLOW_LOCALNETWORKS=true
      - GITEA__INDEXER__REPO_INDEXER_ENABLED=true
      - GITEA__WEBHOOK__ALLOWED_HOST_LIST=*.{{domain}}

    volumes:
      - /ssd/app/gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

    networks:
      - web

    ports:
      - "1108:22"

    labels:
      - traefik.enable=true
      - traefik.http.routers.gt.rule=Host(`gt.{{ domain }}`)
      - traefik.http.routers.gt.entrypoints=https
      - traefik.http.routers.gt.tls.certresolver=default
      - traefik.http.services.gt.loadbalancer.server.port=80


  drone:
    container_name: drone
    image: drone/drone:2
    restart: unless-stopped

    volumes:
    - /ssd/app/drone:/data

    networks:
      - web
      - drone

    environment:
    - DRONE_GITEA_SERVER=https://gt.{{ domain }}
    - DRONE_GITEA_CLIENT_ID=${DRONE_GITEA_CLIENT_ID}
    - DRONE_GITEA_CLIENT_SECRET=${DRONE_GITEA_CLIENT_SECRET}
    - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
    - DRONE_SERVER_HOST=dr.{{ domain }}
    - DRONE_SERVER_PROTO=https
    - DRONE_DATADOG_ENABLED=false

    labels:
      - traefik.enable=true
      - traefik.http.routers.dr.rule=Host(`dr.{{ domain }}`)
      - traefik.http.routers.dr.entrypoints=https
      - traefik.http.routers.dr.tls.certresolver=default
      - traefik.http.services.dr.loadbalancer.server.port=80


  runner:
    container_name: runner
    restart: unless-stopped
    image: drone/drone-runner-docker:1

    volumes:
    - /var/run/docker.sock:/var/run/docker.sock

    networks:
      - drone

    environment:
    - DRONE_RPC_PROTO=http
    - DRONE_RPC_HOST=drone
    - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
    - DRONE_RUNNER_CAPACITY=2
    - DRONE_RUNNER_NAME=roger-bannister