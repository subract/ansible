version: '3.7'

networks:
  web:

services:

  traefik:
    container_name: traefik
    image: traefik:latest
    restart: unless-stopped
    command: --providers.docker

    ports:
      - 80:80
      - 443:443

    networks:
      - web

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/traefik/traefik.yml:/traefik.yml
      - /opt/traefik/acme.json:/acme.json
      - /etc/localtime:/etc/localtime:ro

    labels:
      traefik.enable: false

  dashy:
    container_name: dashy
    image: ghcr.io/lissy93/dashy
    restart: unless-stopped

    networks:
      - web

    environment:
      NODE_ENV: production

    volumes:
      - /opt/dashy/configuration.yml:/app/public/conf.yml:ro

    healthcheck:
      test: ['CMD', 'node', '/app/services/healthcheck']
      interval: 2s
      timeout: 10s
      retries: 3
      start_period: 20s

    labels:
      traefik.enable: true
      traefik.http.routers.dashy-demo.rule: Host(`dashy-demo.{{ quaternary_domain }}`)
      traefik.http.routers.dashy-demo.entrypoints: https
      traefik.http.routers.dashy-demo.tls.certresolver: default
      traefik.http.services.dashy-demo.loadbalancer.server.port: 80

  dashy-keycloak:
    container_name: dashy-keycloak
    image: ghcr.io/lissy93/dashy
    restart: unless-stopped

    networks:
      - web

    environment:
      NODE_ENV: production

    volumes:
      - /opt/dashy-keycloak/configuration.yml:/app/public/conf.yml:ro

    healthcheck:
      test: ['CMD', 'node', '/app/services/healthcheck']
      interval: 2s
      timeout: 10s
      retries: 3
      start_period: 20s

    labels:
      traefik.enable: true
      traefik.http.routers.dashy-demo-keycloak.rule: Host(`dashy-demo-keycloak.{{ quaternary_domain }}`)
      traefik.http.routers.dashy-demo-keycloak.entrypoints: https
      traefik.http.routers.dashy-demo-keycloak.tls.certresolver: default
      traefik.http.services.dashy-demo-keycloak.loadbalancer.server.port: 80

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    restart: unless-stopped
    command: start

    networks:
      - web

    volumes: 
      - /opt/keycloak:/opt/keycloak/data/h2

    environment:
      KC_HOSTNAME: auth-demo.{{ quaternary_domain }} 
      KC_PROXY: edge
      # KC_DB: mariadb
      # KC_DB_URL_HOST: mariadb
      # KC_DB_URL_PORT: 3306
      # KC_DB_URL_DATABASE: keycloak
      # KC_DB_USERNAME: keycloak
      # Not needed after initial setup
      # KEYCLOAK_ADMIN: 
      # KEYCLOAK_ADMIN_PASSWORD: 


    labels:
      traefik.enable: true
      traefik.docker.network: doc_web

      # Create service named "auth-demo" attached to port 8080
      traefik.http.services.auth-demo.loadbalancer.server.port: 8080

      # Create a basic router for Keycloak
      traefik.http.routers.auth.rule: Host(`auth-demo.{{ quaternary_domain }}`)
      traefik.http.routers.auth.service: auth-demo
      traefik.http.routers.auth.entrypoints: https
      traefik.http.routers.auth.tls.certresolver: default