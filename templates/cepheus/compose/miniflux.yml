networks:
  web:
  db:

services:
  miniflux:
    container_name: miniflux
    image: miniflux/miniflux:latest
    user: 4006:4006
    restart: unless-stopped

    depends_on:
      miniflux_db:
        condition: service_healthy

    networks:
      - web
      - db

    env_file: miniflux.env
    environment:
      RUN_MIGRATIONS: 1
      BASE_URL: https://rss.{{ tertiary_domain }}
      CLEANUP_ARCHIVE_UNREAD_DAYS: -1
      CLEANUP_ARCHIVE_READ_DAYS: -1
      POLLING_FREQUENCY: 5
      SCHEDULER_ROUND_ROBIN_MIN_INTERVAL: 60
      OAUTH2_PROVIDER: oidc
      OAUTH2_CLIENT_ID: miniflux
      OAUTH2_REDIRECT_URL: https://rss.{{ tertiary_domain }}/oauth2/oidc/callback
      OAUTH2_OIDC_DISCOVERY_ENDPOINT: https://auth.{{ tertiary_domain }}
      OAUTH2_USER_CREATION: 1
    
    labels:
      traefik.enable: true
      traefik.http.routers.rss.rule: Host(`rss.{{ tertiary_domain }}`)
      traefik.http.routers.rss.tls.certresolver: default
      traefik.http.services.rss.loadbalancer.server.port: 8080
      traefik.http.routers.rss.middlewares: authelia
      homepage.group: Apps
      homepage.name: Feed reader
      homepage.icon: miniflux.png
      homepage.href: https://rss.{{ tertiary_domain }}/
      homepage.siteMonitor: http://miniflux:8080
      homepage.weight: 25
      homepage.description: Miniflux
      homepage.widget.type: miniflux
      homepage.widget.url: http://miniflux:8080
      homepage.widget.key: ${MINIFLUX_API_KEY}

  miniflux_db:
    container_name: miniflux_db
    image: postgres:15
    user: 4006:4006
    restart: unless-stopped

    networks:
      - db

    env_file: miniflux.env
    environment:
      POSTGRES_USER: miniflux
      POSTGRES_DB: miniflux

    volumes:
      - "{{ app_root }}/miniflux:/var/lib/postgresql/data"

    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      start_interval: 5s
      start_period: 30s

