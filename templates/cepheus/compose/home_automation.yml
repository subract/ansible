networks:
  web:
  mqtt:
  db:

services:
  home_assistant:
    container_name: home_assistant
    image: linuxserver/homeassistant:latest
    restart: unless-stopped

    networks:
      - web
      - mqtt
      - db

    environment:
      PUID: 4010
      PGID: 4010
      TZ: {{ timezone }}

    volumes:
      - "{{ app_root }}/home_assistant/config:/config"
      - "{{ app_root }}/home_assistant/media:/media"
    ports:
      - 1400:1400 # Sonos
    #   - 21064:21064 # HomeKit

    labels:
      traefik.enable: true
      traefik.http.routers.home.rule: Host(`home.{{ tertiary_domain }}`)
      traefik.http.routers.home.tls.certresolver: default
      traefik.http.services.home.loadbalancer.server.port: 8123
#      traefik.http.routers.home.middlewares: authelia
      homepage.group: Apps
      homepage.name: Home management
      homepage.icon: home-assistant.png
      homepage.href: https://home.{{ tertiary_domain }}/
      homepage.weight: 5
      homepage.description: Home Assistant
      homepage.siteMonitor: http://home_assistant:8123
      homepage.widget.type: homeassistant
      homepage.widget.fields: '["lights_on"]'
      homepage.widget.url: http://home_assistant:8123
      homepage.widget.key: ${HOMEASSISTANT_API_KEY}
  
  node_red:
    container_name: node_red
    image: nodered/node-red
    restart: unless-stopped
    user: 4010:4010

    volumes:
      - "{{ app_root }}/node_red:/data"
      - /etc/localtime:/etc/localtime:ro

    networks:
      - web
      - mqtt

    environment:
      TZ: "{{ timezone }}"

    labels:
      traefik.enable: true
      traefik.http.routers.auto.rule: Host(`auto.{{ tertiary_domain }}`)
      traefik.http.routers.auto.tls.certresolver: default
      traefik.http.services.auto.loadbalancer.server.port: 1880
      traefik.http.routers.auto.middlewares: authelia
      homepage.group: Apps
      homepage.name: Automation workflows
      homepage.icon: node-red.png
      homepage.href: https://auto.{{ tertiary_domain }}/
      homepage.weight: 64
      homepage.description: Node-RED
      homepage.siteMonitor: http://node_red:1880

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    user: 4010:4010
    restart: unless-stopped

    networks:
      - mqtt

    volumes:
      - "{{ app_root }}/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf"

    labels:
      - traefik.enable=false

  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt
    user: 4010:4010
    restart: unless-stopped

    depends_on:
      - mosquitto

    volumes:
      - "{{ app_root }}/zigbee2mqtt:/app/data"

    devices:
      - /dev/zigbee_stick

    networks:
      - web
      - mqtt

    environment:
      TZ: {{ timezone }}

    labels:
      traefik.enable: true
      traefik.http.routers.zigbee.rule: Host(`zigbee.{{ tertiary_domain }}`)
      traefik.http.routers.zigbee.tls.certresolver: default
      traefik.http.services.zigbee.loadbalancer.server.port: 8080
      traefik.http.routers.zigbee.middlewares: authelia
      homepage.group: Apps
      homepage.name: Mesh networking
      homepage.icon: zigbee2mqtt.png
      homepage.href: https://zigbee.{{ tertiary_domain }}/
      homepage.description: Zigbee2MQTT
      homepage.siteMonitor: http://zigbee2mqtt:8080
      homepage.weight: 65