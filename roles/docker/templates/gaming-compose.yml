version: "3.7"

networks:
  web:
  db:

services:
  mc-survival-3:
    container_name: mc-survival-3
    image: itzg/minecraft-server:java17
    restart: unless-stopped

    ports:
      - 25568:25565

    networks:
      - web

    volumes:
      - /ssd/app/games/minecraft/mc-survival-211205-1.18.0:/data

    environment:
      TZ: America/Chicago
      EULA: True
      PVP: false
      DIFFICULTY: normal
      SERVER_NAME: Haven Grotto
      OPS: ${MINECRAFT_OP}
      MEMORY: 3G
      MOTD: Haven Grotto
      TYPE: FORGE
      VERSION: 1.18.2

    labels:
      traefik.enable: false

  mc-survival-4:
    container_name: mc-survival-4
    image: itzg/minecraft-server:java17
    restart: unless-stopped

    ports:
      - 25569:25565

    networks:
      - web

    volumes:
      - /ssd/app/games/minecraft/mc-survival-221003-1.19.2:/data

    environment:
      TZ: America/Chicago
      EULA: True
      PVP: false
      DIFFICULTY: normal
      SERVER_NAME: Boulder Keep
      OPS: ${MINECRAFT_OP}
      MEMORY: 3G
      MOTD: Boulder Keep
      TYPE: FORGE
      VERSION: 1.19.2
      VIEW_DISTANCE: 24

    labels:
      traefik.enable: false

  factorio:
    container_name: factorio
    image: factoriotools/factorio:stable
    restart: unless-stopped
    
    ports:
      - 34197:34197/udp
      - 27015:27015/tcp

    networks:
      - web

    volumes:
      - /ssd/app/games/factorio/loriini:/factorio

    environment:
      UPDATE_MODS_ON_START: false
      SAVE_NAME: Loriini

    labels:
      traefik.enable: false

  traefik:
    container_name: traefik
    image: traefik:latest
    restart: unless-stopped
    command: --providers.docker

    ports:
      - 80:80
      - 443:443

    networks:
      - web

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /ssd/dmz/app/traefik/traefik.yml:/traefik.yml
      - /ssd/dmz/app/traefik/acme.json:/acme.json
      - /etc/localtime:/etc/localtime:ro

    labels:
      traefik.enable: false

  hedgedoc:
    image: lscr.io/linuxserver/hedgedoc:latest
    container_name: hedgedoc
    restart: unless-stopped

    environment:
      PUID: 2010
      PGID: 2010
      TZ: America/Chicago
      CMD_DOMAIN: hd.{{domain}}
      CMD_PROTOCOL_USESSL: true
      CMD_ALLOW_ORIGIN: "[hd.{{domain}}]" #optional
      CMD_ALLOW_ANONYMOUS: false
      CMD_DEFAULT_PERMISSION: limited
      CMD_ALLOW_EMAIL_REGISTER: false

    volumes:
      - /ssd/dmz/app/hedgedoc:/config

    networks:
      - web

    labels:
      traefik.enable: true
      traefik.http.routers.hd.rule: Host(`hd.{{ domain }}`)
      traefik.http.routers.hd.entrypoints: https
      traefik.http.routers.hd.tls.certresolver: default
      traefik.http.services.hd.loadbalancer.server.port: 3000

  mariadb:
    container_name: mariadb
    image: mariadb:10
    restart: unless-stopped
    user: 2010:2010

    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
    
    volumes:
      - /ssd/dmz/app/mariadb:/var/lib/mysql

    networks:
      - db

    labels:
      traefik.enable: false

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    restart: unless-stopped
    command: start

    depends_on:
      - mariadb

    environment:
      KC_HOSTNAME: kc.{{ domain }} 
      KC_PROXY: edge
      KEYCLOAK_ADMIN: aven
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: mariadb
      KC_DB_URL_HOST: mariadb
      KC_DB_URL_PORT: 3306
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}

    networks:
      - web
      - db

    labels:
      traefik.enable: true

      # Create service named "kc-service" attached to port 8080
      traefik.http.services.kc-service.loadbalancer.server.port: 8080

      # Create a basic router for Keycloak
      traefik.http.routers.kc.rule: Host(`kc.{{ domain }}`)
      traefik.http.routers.kc.service: kc-service
      traefik.http.routers.kc.entrypoints: https
      traefik.http.routers.kc.tls.certresolver: default
          
      # Create an additional router for the admin interface
      # Example here: https://www.reddit.com/r/Traefik/comments/hpsrx9/is_it_possible_to_configure_whitelist_for/
      traefik.http.routers.kc-admin.rule: (Host(`kc.{{ domain }}`) && PathPrefix(`/admin`,`/metrics`,`/health`))
      traefik.http.routers.kc-admin.service: kc-service
      traefik.http.routers.kc-admin.entrypoints: https
      traefik.http.routers.kc-admin.tls.certresolver: default
          
      # Apply an IP-based whitelist to the admin router, preventing internet access
      traefik.http.routers.kc-admin.middlewares: kc-admin-ipwhitelist
      traefik.http.middlewares.kc-admin-ipwhitelist.ipwhitelist.sourcerange: "10.0.0.0/8"