---
- name: Install nfs-common
  tags: nfs
  apt:
    name: nfs-common

- name: Create mountpoints
  tags: config, nfs
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
    mode: "0770"
  loop: "{{ nfs_dirs }}"
  notify: Make mountpoints immutable

# Mark mountpoints as immutable (if created) before mounting
- name: Flush handlers
  tags: config, nfs
  meta: flush_handlers

# If using Tailscale, configure NFS to depend on it being up
- name: Configure NFS to depend on Tailscale
  when: "'tailscale0' in ansible_interfaces"
  block:
  # We need the nfs client to depend on the tailscale tunnel
    - name: Add lines to nfs-client.target
      tags: config, nfs
      lineinfile:
        path: /etc/systemd/system/remote-fs.target.wants/nfs-client.target
        insertafter: ^Before=
        line: "{{ item }}"
      with_items:
        - After=tailscaled.service
        - Wants=tailscaled.service
      when: "'tailscale0' in ansible_interfaces"
      notify: Reload systemd

    # We need Tailscale not to report being up for a few seconds
    # So we create an override on the service that adds a 5s delay
    - name: Create override directory for tailscaled.service
      tags: config, nfs
      file:
        path: /etc/systemd/system/tailscaled.service.d
        state: directory
        mode: "0755"

    - name: Create tailscaled override file
      tags: config, nfs
      copy:
        content: |
          [Service]
          ExecStartPost=sleep 5
        dest: /etc/systemd/system/tailscaled.service.d/override.conf
        mode: "0644"
      notify: Reload systemd

- name: Mount NFS shares
  tags: config, nfs
  ansible.posix.mount:
    src: "{{ item.server }}:{{ item.path }}"
    path: "{{ item.path }}"
    opts: rw
    state: mounted
    fstype: nfs
  loop: "{{ nfs_dirs }}"
